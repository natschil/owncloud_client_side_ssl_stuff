diff --git a/modules/csync_owncloud.c b/modules/csync_owncloud.c
index e9356e2..7c9efdb 100644
--- a/modules/csync_owncloud.c
+++ b/modules/csync_owncloud.c
@@ -244,6 +244,34 @@ static int ne_proxy_auth( void *userdata, const char *realm, int attempt,
     return (attempt < 3) ? 0 : -1;
 }
 
+//Configure client side ssl certficates
+static int configureSSL(ne_session *session)
+{
+    ne_ssl_client_cert* ccert = NULL;
+    if(!session)
+        return -1;
+    if(!dav_session.client_side_ssl_cert_path)
+        return 0;
+    ccert = ne_ssl_clicert_read(dav_session.client_side_ssl_cert_path);
+    if(!ccert){
+        DEBUG_WEBDAV("The client side ssl certificate at %s is ivalid", dav_session.client_side_ssl_cert_path);
+        return -1;
+    }else if(ne_ssl_clicert_encrypted(ccert))
+    {
+        const char* password = dav_session.client_side_ssl_cert_pwd;
+        if(!password){
+            DEBUG_WEBDAV("No password for password-protected client side ssl certificate at %s given",dav_session.client_side_ssl_cert_path);
+            return -1;
+        }else if(ne_ssl_clicert_decrypt(ccert,password)){
+            ne_ssl_clicert_free(ccert);
+            DEBUG_WEBDAV("Invalid password given to decrypt client side ssl certificate %s",dav_session.client_side_ssl_cert_path);
+            return -1;
+        }
+    } 
+    ne_ssl_set_clicert(session,ccert);
+    return 0;
+}
+
 /* Configure the proxy depending on the variables */
 static int configureProxy( ne_session *session )
 {
@@ -517,6 +545,7 @@ static int dav_connect(const char *base_url) {
     char *host = NULL;
     unsigned int port = 0;
     int proxystate = -1;
+    int sslstate = -1;
 
     if (_connected) {
         return 0;
@@ -603,6 +632,20 @@ static int dav_connect(const char *base_url) {
         ne_set_proxy_auth( dav_session.ctx, ne_proxy_auth, 0 );
     }
 
+    sslstate = configureSSL(dav_session.ctx);
+    if(sslstate < 0)
+    {
+        DEBUG_WEBDAV("Error: Setting up SSL failed. (More specifically, the client side ssl cert code failed)");
+        //If someone is serious enough about security to use client side ssl certs, we exit:
+        if(dav_session.client_side_ssl_cert_path)
+        {
+            rc = -1;
+            goto out;
+        }
+    }
+
+    
+
     /* Disable, it is broken right now */
     dav_session.no_recursive_propfind = true;
 
@@ -1819,6 +1862,8 @@ static int owncloud_set_property(const char *key, void *data) {
     READ_STRING_PROPERTY(proxy_host)
     READ_STRING_PROPERTY(proxy_user)
     READ_STRING_PROPERTY(proxy_pwd)
+    READ_STRING_PROPERTY(client_side_ssl_cert_path)
+    READ_STRING_PROPERTY(client_side_ssl_cert_pwd)
 #undef READ_STRING_PROPERTY
 
     if (c_streq(key, "proxy_port")) {
@@ -1934,6 +1979,7 @@ void vio_module_shutdown(csync_vio_method_t *method) {
     SAFE_FREE( dav_session.proxy_pwd  );
     SAFE_FREE( dav_session.session_key);
     SAFE_FREE( dav_session.error_string );
+    SAFE_FREE( dav_session.client_side_ssl_cert_path );
 
     /* DEBUG_WEBDAV( "********** vio_module_shutdown" ); */
 }
diff --git a/modules/csync_owncloud.h b/modules/csync_owncloud.h
index a05ccc1..65b6bc8 100644
--- a/modules/csync_owncloud.h
+++ b/modules/csync_owncloud.h
@@ -147,6 +147,9 @@ struct dav_session_s {
     char *proxy_user;
     char *proxy_pwd;
 
+    char* client_side_ssl_cert_path;
+    char* client_side_ssl_cert_pwd;
+
     char *session_key;
 
     char *error_string;
